{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notification.js","components/project/ProjectSummary.js","components/project/ProjectList.js","components/dashboard/Dashboard.js","components/project/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/project/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","Notification","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","toString","format","ProjectList","projects","project_ProjectSummary","Dashboard","_this$props","this","project_ProjectList","dashboard_Notification","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orederBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authid","add","objectSpread","authorId","Date","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6a4d8d11.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { signOut } from '../../store/actions/authActions'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst SignedInLinks = (props) => {\r\n    return(\r\n        <ul className=\"right\">\r\n            <li>\r\n                <NavLink to='/create'>Create Project</NavLink>\r\n            </li>\r\n            <li>\r\n                <a onClick={props.signOut}>Logout</a>\r\n            </li>\r\n            <li>\r\n                <NavLink to='/' className='btn btn-floating pink lighten-1'>\r\n                {props.profile.initials}\r\n                </NavLink>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' });\r\n        }).catch((err) =>{\r\n            dispatch({ type: 'LOGIN_FAILED', err });\r\n        })\r\n    }\r\n};\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS'})\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0] \r\n            });\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS'})\r\n        }).catch(err => {\r\n            dispatch ({ type: 'SIGNUP_ERROR', err })\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n    return(\r\n        <ul className=\"right\">\r\n            <li>\r\n                <NavLink to='/signup'>Signup</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to='/signin'>Login</NavLink>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks.js'\r\nimport SignedOutLinks from './SignedOutLinks.js'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props;\r\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\r\n    return(\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo\">WarioPlan</Link>\r\n                { links }\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return{\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notification = (props) => {\r\n    const {notifications} = props;\r\n    console.log(props);\r\n    return(\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        { notifications && notifications.map(item => {\r\n                            return(\r\n                                <li key={item.id}>\r\n                                    <span className=\"pink-text\">{item.user} </span>\r\n                                    <span>{item.content}</span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification;","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return(\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <div className=\"card-title\">\r\n                    <span>{project.title}</span>\r\n                    <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                    <p className=\"grey-text\">{moment(project.createdAt.toDate().toString()).format('lll')}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary;","import React from 'react'\r\nimport ProjectSummary from '../project/ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return(\r\n        <div className=\"project-list section\">\r\n            { projects && projects.map(project => {\r\n                return (\r\n                <Link to={'/project/'+project.id}  key={project.id} >\r\n                    <ProjectSummary project={project}/>\r\n                </Link>\r\n                )\r\n            })}  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList;","import React, { Component } from 'react'\r\nimport Notification from './Notification.js'\r\nimport ProjectList from '../project/ProjectList.js'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nclass Dashboard extends Component {\r\n    render(){\r\n        const { projects, auth, notifications } = this.props;\r\n        if(!auth.uid) return <Redirect to=\"/signin\" />\r\n        return(\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects} /> \r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notification notifications={notifications} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n      { collection: 'projects' , orederBy: ['createdAt', 'desc']},\r\n      { collection: 'notifications', limit: 3, orederBy: ['time', 'desc']}\r\n    ])\r\n  )(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n    const { project, auth } = props;\r\n    if(!auth.uid) return (<Redirect to=\"/signin\" />)\r\n    if(project){\r\n        return(\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{project.title}</span>\r\n                        <p>{project.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <div>Posted By {project.authorFirstName} {project.authorLastName}</div>\r\n                        <div>{moment(project.createdAt.toDate().toString()).format('lll')}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }return(\r\n        <div className=\"container center\">Loading Pages...</div>\r\n    )\r\n    \r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null;\r\n    return {\r\n        project:project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n      { collection: 'projects' }\r\n    ])\r\n)(ProjectDetails);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    } \r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state)\r\n    }\r\n    render() {\r\n        const {authError, auth} = this.props;\r\n        if(auth.uid) return (<Redirect to='/' />)\r\n        return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p>: null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    } \r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n    }\r\n    render() {\r\n        const { auth, authError } = this.props\r\n        if(auth.uid) return (<Redirect to='/' />)\r\n        return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p>: null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    } \r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.createProject(this.state);\r\n        this.props.history.push('/')\r\n    }\r\n    render() {\r\n        const { auth } = this.props;\r\n        if(!auth.uid) return <Redirect to=\"/signin\" />\r\n        return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Project Content</label>\r\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n      createProject: (project) => dispatch(createProject(project))\r\n    }\r\n  }\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n"," export const createProject = (project) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n      // make async call to database\r\n      const firestore = getFirestore();\r\n      const profile = getState().firebase.profile;\r\n      const authid = getState().firebase.auth.uid;\r\n      firestore.collection('projects').add({\r\n        ...project,\r\n        authorFirstName: profile.firstName,\r\n        authorLastName:  profile.lastName,\r\n        authorId: authid,\r\n        createdAt: new Date()\r\n      }).then(() =>{\r\n        dispatch({ type: 'CREATE_PROJECT', project });\r\n      }).catch((err) =>{\r\n        dispatch({ type: 'CREATE_PROJECT_ERROR', err });\r\n      })\r\n      \r\n    }\r\n  };","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar.js'\nimport Dashboard from './components/dashboard/Dashboard.js'\nimport ProjectDetails from './components/project/ProjectDetails.js'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/project/CreateProject'\n\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n              <Route exact path='/' component={Dashboard} />\n              <Route path='/project/:id' component={ProjectDetails} />\n              <Route path='/signin' component={SignIn} />\n              <Route path='/signup' component={SignUp} />\n              <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState =  {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch(action.type) {\r\n        case 'LOGIN_FAILED':\r\n            console.log('login failed')\r\n            return{\r\n                ...state,\r\n                authError: 'login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success')\r\n            return{\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success')\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error')\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer ","const initState =  {}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n          console.log('create project', action.project);\r\n          return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n          console.log('create project error', action.err);\r\n          return state;\r\n        default:\r\n          return state;\r\n      }\r\n}\r\n\r\nexport default projectReducer ","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer"," import firebase from 'firebase/app'\r\n import 'firebase/firestore'\r\n import 'firebase/auth'\r\n\r\n // Initialize Firebase\r\n var config = {\r\n    apiKey: \"AIzaSyAdkN9F0Kqn-sc9SzBKP6lLvRTp3PMDAAU\",\r\n    authDomain: \"mbokdjah-warioplan.firebaseapp.com\",\r\n    databaseURL: \"https://mbokdjah-warioplan.firebaseio.com\",\r\n    projectId: \"mbokdjah-warioplan\",\r\n    storageBucket: \"mbokdjah-warioplan.appspot.com\",\r\n    messagingSenderId: \"51871297751\"\r\n  };\r\n  firebase.initializeApp(config);\r\n  firebase.firestore().settings({timestampsInSnapshots: true});\r\n  \r\n  export default firebase","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from  './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig.js'\n\nconst store = createStore(rootReducer, \n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true})\n    )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n})\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}